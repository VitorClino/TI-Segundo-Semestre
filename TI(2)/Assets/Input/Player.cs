//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Input/Player.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Player: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Player()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player"",
    ""maps"": [
        {
            ""name"": ""Jogador"",
            ""id"": ""58a7f988-fb10-4df9-89d8-e044e0f0f8c0"",
            ""actions"": [
                {
                    ""name"": ""MovimentoDir"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2e7a4ca7-6880-4234-b77a-5fd2889bc964"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MovimentoEsq"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a2a4d9ea-eace-42af-8195-efa8e5079284"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""MovimentoDirMobile"",
                    ""id"": ""937ccb84-eefe-4b38-b528-56dacd17dada"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimentoDir"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3178c547-2ace-4fef-911d-c2ce3ac5d381"",
                    ""path"": ""<Touchscreen>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimentoDir"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""MovimentoDirTeclado"",
                    ""id"": ""c211737c-3fe2-4cee-b098-a8734bf2381f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimentoDir"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0f225fe4-3d2e-4805-a29d-e8e2b31fe359"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimentoDir"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""MovimentoEsqMobile"",
                    ""id"": ""87170011-8768-456a-807e-06c570966d50"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimentoEsq"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""55b98fc2-6dc4-4df7-895c-c4a9a5864b47"",
                    ""path"": ""<Touchscreen>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimentoEsq"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""MovimentoEsqTeclado"",
                    ""id"": ""206fe9dd-f84e-41a8-ae89-752e7bae6eab"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimentoEsq"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""949d49c9-d114-4e16-ae57-38fd5f93d13d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimentoEsq"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Jogador
        m_Jogador = asset.FindActionMap("Jogador", throwIfNotFound: true);
        m_Jogador_MovimentoDir = m_Jogador.FindAction("MovimentoDir", throwIfNotFound: true);
        m_Jogador_MovimentoEsq = m_Jogador.FindAction("MovimentoEsq", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Jogador
    private readonly InputActionMap m_Jogador;
    private List<IJogadorActions> m_JogadorActionsCallbackInterfaces = new List<IJogadorActions>();
    private readonly InputAction m_Jogador_MovimentoDir;
    private readonly InputAction m_Jogador_MovimentoEsq;
    public struct JogadorActions
    {
        private @Player m_Wrapper;
        public JogadorActions(@Player wrapper) { m_Wrapper = wrapper; }
        public InputAction @MovimentoDir => m_Wrapper.m_Jogador_MovimentoDir;
        public InputAction @MovimentoEsq => m_Wrapper.m_Jogador_MovimentoEsq;
        public InputActionMap Get() { return m_Wrapper.m_Jogador; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(JogadorActions set) { return set.Get(); }
        public void AddCallbacks(IJogadorActions instance)
        {
            if (instance == null || m_Wrapper.m_JogadorActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_JogadorActionsCallbackInterfaces.Add(instance);
            @MovimentoDir.started += instance.OnMovimentoDir;
            @MovimentoDir.performed += instance.OnMovimentoDir;
            @MovimentoDir.canceled += instance.OnMovimentoDir;
            @MovimentoEsq.started += instance.OnMovimentoEsq;
            @MovimentoEsq.performed += instance.OnMovimentoEsq;
            @MovimentoEsq.canceled += instance.OnMovimentoEsq;
        }

        private void UnregisterCallbacks(IJogadorActions instance)
        {
            @MovimentoDir.started -= instance.OnMovimentoDir;
            @MovimentoDir.performed -= instance.OnMovimentoDir;
            @MovimentoDir.canceled -= instance.OnMovimentoDir;
            @MovimentoEsq.started -= instance.OnMovimentoEsq;
            @MovimentoEsq.performed -= instance.OnMovimentoEsq;
            @MovimentoEsq.canceled -= instance.OnMovimentoEsq;
        }

        public void RemoveCallbacks(IJogadorActions instance)
        {
            if (m_Wrapper.m_JogadorActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IJogadorActions instance)
        {
            foreach (var item in m_Wrapper.m_JogadorActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_JogadorActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public JogadorActions @Jogador => new JogadorActions(this);
    public interface IJogadorActions
    {
        void OnMovimentoDir(InputAction.CallbackContext context);
        void OnMovimentoEsq(InputAction.CallbackContext context);
    }
}
